@using CasinoDeYann.Src.Services
@inject UserContextService UserContextService
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - CasinoDeYann</title>
    <script type="importmap"></script>
    <!--<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>-->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jersey+10&display=swap" rel="stylesheet">
    @RenderSection("Styles", required: false)
</head>
<body>
<header>
    @{
        var currentUser = await UserContextService.GetCurrentUserAsync();
    }

    <nav>
        <div class="navbar-container">
            <ul class="navbar">
                <div class="nav-left">
                    <li class="nav-item">
                        <a asp-page="/Index">🎰 Le Casino de Yann</a>
                    </li>
                    <li class="nav-item">
                        <a asp-page="/Index">Accueil</a>
                    </li>
                    <li class="nav-item">
                        <a asp-page="/SlotMachine">Machine à sous</a>
                    </li>
                    <li class="nav-item">
                        <a asp-page="/Roulette">Roulette</a>
                    </li>
                    <li class="nav-item">
                        <a asp-page="/GoldMine">Mine d'or</a>
                    </li>
                </div>

                <div class="nav-right">
                    @if (currentUser != null)
                    {
                        <li class="nav-item" style="position: relative;">
                            <form id="userSearchForm" method="get" onsubmit="redirectToUser(event)">
                                <input type="text" id="searchInput" placeholder="Rechercher un utilisateur" autocomplete="off" required />
                                <div id="autocompleteList" class="autocomplete-items"></div>
                                <button type="submit">🔍</button>
                            </form>
                        </li>
                        <li class="nav-item">
                            <span id="user-money">@currentUser.Money</span>
                            <img class="mini-coin" src="/assets/GoldMine/Yanns/yanns.webp" />
                        </li>
                        <li class="nav-item">
                            <a asp-page="/user" asp-route-username="@currentUser.Username">
                                @currentUser.Username
                            </a>
                        </li>
                        <li class="nav-item">
                            <a asp-page="/Account/Logout">Déconnexion</a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a asp-page="/Account/Login">Connexion</a>
                        </li>
                        <li class="nav-item">
                            <a asp-page="/Account/Signup">S'enregistrer</a>
                        </li>
                    }
                </div>
            </ul>
        </div>
    </nav>

</header>

<div class="container-fluid p-0">
    <main role="main" class="main">
        @RenderBody()
    </main>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
    const input = document.getElementById('searchInput');
    const list = document.getElementById('autocompleteList');

    input.addEventListener('input', async () => {
        const query = input.value.trim();
        if (!query) {
            list.innerHTML = '';
            return;
        }

        const response = await fetch(`/api/user?query=${encodeURIComponent(query)}`);
        const usernames = await response.json();

        list.innerHTML = '';
        usernames.forEach(username => {
            const item = document.createElement('div');
            item.textContent = username;
            item.className = 'autocomplete-item';
            item.addEventListener('click', () => {
                input.value = username;
                list.innerHTML = '';
            });
            list.appendChild(item);
        });
    });

    document.addEventListener('click', (e) => {
        if (!e.target.closest('#userSearchForm')) {
            list.innerHTML = '';
        }
    });

    function redirectToUser(event) {
        event.preventDefault();
        const username = input.value.trim();
        if (username) {
            window.location.href = `/users/${encodeURIComponent(username)}`;
        }
    }
</script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>